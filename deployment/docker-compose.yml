version: '3.3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    restart: always
    ports:
      - "2181"
    hostname: zookeeper
    volumes:
      - /home/azureuser/zookeeper/data:/opt/zookeeper-3.4.13/data
  
  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    restart: always
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: kafka.westus3.cloudapp.azure.com # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://kafka.westus3.cloudapp.azure.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./broker/data:/var/lib/kafka/data
    depends_on:
      - "zookeeper"
  
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'events'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - ./my-db:/var/lib/mysql

  audit:
    container_name: audit
    build: ../Audit/
    image: audit:latest
    ports:
      - "8110:8110"
    restart: unless-stopped
    depends_on:
      - kafka

  processing:
    container_name: processing
    build: ../Processing/
    image: processing:latest
    ports:
      - "8100:8100"
    restart: unless-stopped
    depends_on:
      - storage
    network_mode: "host"
  receiver:
    container_name: receiver
    build: ../Receiver/
    image: receiver:latest
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      - kafka
    
  storage:
    container_name: storage
    build: ../Storage/
    image: storage:latest
    ports:
      - "8090:8090"
    restart: unless-stopped
    depends_on:
      - kafka
  dashboard-ui:
    container_name: dashboard-ui
    build: ../dashboard-ui/
    image: dashboard:latest
    ports:
      - "3000:3000"
    depends_on:
      - "processing"
      - "audit"
